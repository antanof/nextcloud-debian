---
# tasks file for debian-nextcloud
- name: install commons
  apt: name={{ item }} state=latest
  with_items:
    - apt-transport-https
    - vim
    - git
    - wget
    - gnupg2
    - dirmngr
    - lsb-release
    - ssl-cert
    - ca-certificates
- name: test sources.list backup
  stat: path=/etc/apt/sources.list.bak
  register: sources_list_stat
- name: backup sources.list
  command: cp /etc/apt/sources.list /etc/apt/sources.list.bak
  when: not sources_list_stat.stat.exists
- name: add repo in sources.list
  template:
    src: sources.list.j2
    dest: /etc/apt/sources.list
- name: add sury repo key
  apt_key:
    url: https://packages.sury.org/php/apt.gpg
    keyring: /etc/apt/trusted.gpg.d/php.gpg
- name: add nginx repo key
  apt_key:
    url: http://nginx.org/keys/nginx_signing.key
    keyring: /etc/apt/trusted.gpg.d/nginx.gpg
- name: add mariadb repo key
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: F1656F24C74CD1D8
- name: install other commons
  apt: name={{ item }} state=latest
  with_items:
    - software-properties-common
    - zip
    - unzip
    - screen
    - curl
    - git
    - ffmpeg
    - libfile-fcntllock-perl
- name: nginx installation
  include: nginx-install.yml
- name: PHP installation & configuration
  include: php.yml
- name: MariaDB installation & configuration
  include: mariadb.yml
- name: install redis
  apt: name={{ item }} state=latest
  with_items:
    - redis-server
    - php-redis
- name: configure redis
  replace:
    path: /etc/redis/redis.conf
    regexp: '{{ item.regexp }}'
    replace: '{{ item.replace }}'
    backup: yes
  with_items:
    - { regexp: 'port 6379', replace: 'port 0' }
    - { regexp: '\#\ unixsocket', replace: 'unixsocket' }
    - { regexp: 'unixsocketperm 700', replace: 'unixsocketperm 770' }
    - { regexp: '# maxclients 10000', replace: 'maxclients 512' }
- name: configure overcommit memory
  lineinfile:
    path: /etc/sysctl.conf
    line: 'vm.overcommit_memory = 1'
    state: present
- name: Added redis to www-data group 
  user:
    name: redis
    groups: www-data
    append: yes
  notify:
    - Restart server
    - Wait for server to restart
- name: move nginx default.conf
  stat: path=/etc/nginx/conf.d/default.conf
  register: default_stat
- name: move nginx default.conf
  command: mv /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.bak
  when: default_stat.stat.exists
- name: nextcloud configuration
  template:
    src: nextcloud.conf.j2
    dest: /etc/nginx/conf.d/nextcloud.conf
- name: letsencrypt configuration
  template:
    src: letsencrypt.conf.j2
    dest: /etc/nginx/conf.d/letsencrypt.conf
- name: ssl configuration
  template:
    src: ssl.conf.j2
    dest: /etc/nginx/ssl.conf
- name: proxy configuration
  template:
    src: proxy.conf.j2
    dest: /etc/nginx/proxy.conf
- name: header configuration
  template:
    src: header.conf.j2
    dest: /etc/nginx/header.conf
- name: optimization configuration
  template:
    src: optimization.conf.j2
    dest: /etc/nginx/optimization.conf
- name: php optimization configuration
  template:
    src: php_optimization.conf.j2
    dest: /etc/nginx/php_optimization.conf
- name: test dhparam.pem
  stat: path=/etc/ssl/certs/dhparam.pem
  register: dhparam_stat
- name: create dhparam.pem
  command: openssl dhparam -out /etc/ssl/certs/dhparam.pem 4096
  when: not dhparam_stat.stat.exists
- name: configure nginx for ssl
  replace:
    path: /etc/nginx/nginx.conf
    regexp: '\#\include'
    replace: 'include'
  notify: restart nginx
#- name: get nextcloud checksum
#  uri: url=https://download.nextcloud.com/server/releases/latest.tar.bz2.sha256 return_content=true
#  register: wp_checksum
- name: download nextcloud
  get_url:
    url: https://download.nextcloud.com/server/releases/latest.tar.bz2
    dest: /root
- name: fix permission /var/www
  file:
    path: /var/www
    owner: www-data
    group: www-data
    recurse: yes
- name: extract nextcloud archive
  unarchive:
    src: /root/latest.tar.bz2
    dest: /var/www
    remote_src: yes
  tags: extract_nextcloud
- name: install certbot letsencrypt
  apt: name=certbot state=present update_cache=yes default_release=stretch-backports
  tags: certbot_install
- name: test if certificats exist
  stat: path=/etc/letsencrypt/live/"{{ domain_name }}"/cert.pem
  register: letsencrypt_stat
- name: create letsencrypt certificats
  command: letsencrypt certonly -a webroot --webroot-path=/var/www/letsencrypt --rsa-key-size 4096 --agree-tos -d "{{ domain_name }}" -m  postmaster@"{{ domain_name }}"
  when: not letsencrypt_stat.stat.exists
  ignore_errors: yes
  run_once: true
  tags: certbot
- name: execute permissions script
  script: /root/permissions.sh
  become: yes
  tags: permissions
- name: modify ssl.conf 1
  replace:
    path: /etc/nginx/ssl.conf
    regexp: 'ssl-cert-snakeoil'
#  notify: restart nginx
- name: modify ssl.conf 2
  replace:
    path: /etc/nginx/ssl.conf
    regexp: '#ssl'
    replace: 'ssl'
  notify: restart nginx
- name: INSTALL NEXTCLOUD
  command: su - www-data -s /bin/bash -c 'php /var/www/nextcloud/occ maintenance:install --database "mysql" --database-name "{{ database_name }}" --database-user "{{ database_user }}" --database-pass "{{ database_pass}}" --admin-user "{{ nextcloud_admin }}" --admin-pass "{{ nextcloudadmin_password }}" --data-dir "/var/nc_data"'
  run_once: true
  ignore_errors: yes
- name: nextcloud ad hoc commands
  command: "{{ item }}"
  with_items:
    - su - www-data -s /bin/bash -c 'php /var/www/nextcloud/occ config:system:set trusted_domains 1 --value="{{ domain_name }}"'
    - su - www-data -s /bin/bash -c 'php /var/www/nextcloud/occ config:system:set overwrite.cli.url --value=https://"{{ domain_name }}"'
  run_once: true
  ignore_errors: yes
- name: test backup nextcloud config
  stat: path=/var/www/nextcloud/config/config.php.bak
  register: nc_config_stat
- name: backup nextcloud config
  command: cp /var/www/nextcloud/config/config.php /var/www/nextcloud/config/config.php.bak
  when: not nc_config_stat.stat.exists
- name: expand nextcloud config
  replace:
    path: /var/www/nextcloud/config/config.php
    regexp: ');'
    backup: yes
- name: add conf in nextcloud config
  blockinfile:
    path: /var/www/nextcloud/config/config.php
    block: |
      'activity_expire_days' => 14,
      'auth.bruteforce.protection.enabled' => true,
      'blacklisted_files' => 
      array (
      0 => '.htaccess',
      1 => 'Thumbs.db',
      2 => 'thumbs.db',
      ),
      'cron_log' => true,
      'enable_previews' => true,
      'enabledPreviewProviders' => 
      array (
      0 => 'OC\\Preview\\PNG',
      1 => 'OC\\Preview\\JPEG',
      2 => 'OC\\Preview\\GIF',
      3 => 'OC\\Preview\\BMP',
      4 => 'OC\\Preview\\XBitmap',
      5 => 'OC\\Preview\\Movie',
      6 => 'OC\\Preview\\PDF',
      7 => 'OC\\Preview\\MP3',
      8 => 'OC\\Preview\\TXT',
      9 => 'OC\\Preview\\MarkDown',
      ),
      'filesystem_check_changes' => 0,
      'filelocking.enabled' => 'true',
      'htaccess.RewriteBase' => '/',
      'integrity.check.disabled' => false,
      'knowledgebaseenabled' => false,
      'logfile' => '/var/nc_data/nextcloud.log',
      'loglevel' => 2,
      'logtimezone' => 'Europe/Paris',
      'log_rotate_size' => 104857600,
      'maintenance' => false,
      'memcache.local' => '\\OC\\Memcache\\APCu',
      'memcache.locking' => '\\OC\\Memcache\\Redis',
      'overwriteprotocol' => 'https',
      'preview_max_x' => 1024,
      'preview_max_y' => 768,
      'preview_max_scale_factor' => 1,
      'redis' => 
      array (
      'host' => '/var/run/redis/redis.sock',
      'port' => 0,
      'timeout' => 0.0,
      ),
      'quota_include_external_storage' => false,
      'share_folder' => '/Shares',
      'skeletondirectory' => '',
      'theme' => '',
      'trashbin_retention_obligation' => 'auto, 7',
      'updater.release.channel' => 'stable',
      );
- name: adjust .user.ini
  replace:
    path: /var/www/nextcloud/.user.ini
    regexp: '{{ item.regexp }}'
    replace: '{{ item.replace }}'
    backup: yes
  with_items:
    - { regexp: 'upload_max_filesize=.*', replace: 'upload_max_filesize=10240M' }
    - { regexp: 'post_max_size=.*', replace: 'post_max_size=10240M' }
    - { regexp: 'output_buffering=.*', replace: 'output_buffering="Off"' }
- name: restart all services
  service: name="{{ item }}" state=restarted
  with_items:
    - php7.3-fpm
    - redis-server
    - nginx
...
